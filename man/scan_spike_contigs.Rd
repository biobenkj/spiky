% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scan_spike_contigs.R
\name{scan_spike_contigs}
\alias{scan_spike_contigs}
\title{pretty much what it says: scan standard chroms + spike contigs from a BAM}
\usage{
scan_spike_contigs(bam, spike, param = NULL, ...)
}
\arguments{
\item{bam}{the BAM file}

\item{spike}{the spike-in reference database (e.g. data(spike))}

\item{param}{a ScanBamParam object, or NULL (will default to MAPQ=20 etc)}

\item{...}{additional arguments to pass to scanBamFlag()}
}
\value{
\preformatted{     a CompressedGRangesList with bin- and spike-level coverage
}
}
\description{
Note: behind the scenes, this is being refactored into scan_spike_contigs
and scan_genomic_contigs. Once that is done, perhaps before release, the
default workflow will switch to
}
\details{
\enumerate{
\item scan spike contigs and count fragments per contig or per bin.
\item fit the appropriate model for adjusting genomic contigs based on spikes.
\item scan and adjust binned fragment tallies along genomic contigs per above.
}

This approach decouples binning schemes from model generation (using spikes)
and model-based adjustment (using genomic fragment counts), decreasing code
complexity while increasing the opportunities for caching & parallelization.

add CRAM example here -- tested & works with reheadered spike CRAMs.
Slower than one might like however.
}
\examples{
library(GenomicRanges)
data(spike, package="spiky")
sb <- system.file("extdata", "example.spike.bam", package="spiky",
                  mustWork=TRUE) # switch to a CRAM
res <- scan_spike_contigs(sb, spike=spike) # use default ScanBamParam
summary(res)

}
\seealso{
\preformatted{    Rsamtools::ScanBamParam
}
}
